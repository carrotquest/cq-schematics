import {MockBuilder, MockedComponentFixture, MockRender} from 'ng-mocks';
import {TranslocoModule} from '@ngneat/transloco';
import {<%= classify(name) %><%= classify(type) %>} from './<%= dasherize(name) %><%= type ? '.' + dasherize(type): '' %>';<% if(!skipImport) { %>
import {<%= classify(moduleName) %>} from '<%= moduleRelativePath %>';<% } %>

/** Тип входных параметров компонента */
type ComponentParams = {};

describe('<%= classify(name) %><%= classify(type) %>', () => {
  let fixture: MockedComponentFixture<<%= classify(name) %><%= classify(type) %>, ComponentParams>;
  let componentParams: ComponentParams;

  beforeEach(async () => {<% if(!skipImport) { %>
    await MockBuilder(<%= classify(name) %><%= classify(type) %>, <%= classify(moduleName) %>) <% } else { %>
    await MockBuilder(<%= classify(name) %><%= classify(type) %>, null)<% } %>
      .keep(TranslocoModule);

    componentParams = {};
    fixture = MockRender(<%= classify(name) %><%= classify(type) %>, componentParams, {
      detectChanges: false,
    });
  });

  it('создаётся', () => {
    expect(fixture.point.componentInstance)
      .toBeTruthy();
  });
});
